name: p2p app build

on:

  workflow_dispatch:
  push:
    branches:
      - p2p-exercise


env:
  GO_VERSION: 1.23.3
  PROJECT: p2p-app
  DOCKER_IMAGE: javiee/p2p-app
  DOCKER_TAG: latest
  DEVELOP_BRANCH: p2p-exercise

jobs:
  go-build:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: off 
      CGO_ENABLED: 0 
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Build
        working-directory: ./p2p-app
        run: go build -o main main.go

      - name: Test with Go
        working-directory: ./p2p-app/tests
        run: |
            go test -v -json > report-${{ env.PROJECT }}.json
            cat report-${{ env.PROJECT }}.json
      - name: Upload Go test results
        uses: actions/upload-artifact@v4
        with:
          name: test-result
          path: ./p2p-app/tests/report-${{ env.PROJECT }}.json


  calculate-tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.calculate-tag.outputs.tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Calculate Docker tag
      - name: Determine Docker Tag
        id: calculate-tag
        run: |
          if [ "${{ github.ref }}" == "refs/heads/${DEVELOP_BRANCH}" ]; then
            TAG_PREFIX=$(git rev-parse --short HEAD)
            echo "tag=dev-$TAG_PREFIX" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "tag=latest" >> $GITHUB_OUTPUT
          else
            echo "Unable to determine tag"
            exit 1
          fi
  
  docker-publish:
    if: github.ref == 'refs/heads/p2p-exercise' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: ['go-build','calculate-tag']
    env:
      DOCKER_TAG: ${{needs.calculate-tag.outputs.tag}}
    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: javiee
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Docker build
        working-directory: ./p2p-app
        run: docker build -t $DOCKER_IMAGE:${{ env.DOCKER_TAG }} .

      - name: Push Docker image
        working-directory: ./p2p-app
        run: docker push $DOCKER_IMAGE:${{ env.DOCKER_TAG }}

